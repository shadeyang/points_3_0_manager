<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ruoyi</artifactId>
        <groupId>com.ruoyi</groupId>
        <version>${ruoyi.version}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>ruoyi-admin</artifactId>

    <description>
        web服务入口
    </description>

    <properties>
        <points.version>3.0.0-SNAPSHOT</points.version>
    </properties>

    <dependencies>

        <!-- spring-boot-devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- 表示依赖不会传递 -->
        </dependency>
         <!-- Mysql驱动包 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- 核心模块-->
        <dependency>
            <groupId>com.ruoyi</groupId>
            <artifactId>ruoyi-framework</artifactId>
        </dependency>
        <!-- 定时任务-->
        <dependency>
            <groupId>com.ruoyi</groupId>
            <artifactId>ruoyi-quartz</artifactId>
        </dependency>
        <!-- 代码生成-->
        <dependency>
            <groupId>com.ruoyi</groupId>
            <artifactId>ruoyi-generator</artifactId>
        </dependency>

        <dependency>
            <groupId>com.wt2024.points</groupId>
            <artifactId>frontend-manager</artifactId>
            <version>${points-manager.version}</version>
        </dependency>

        <dependency>
            <groupId>com.wt2024.points</groupId>
            <artifactId>account-repository</artifactId>
            <version>${points.version}</version>
        </dependency>
        <dependency>
            <groupId>com.wt2024.points</groupId>
            <artifactId>customer-repository</artifactId>
            <version>${points.version}</version>
        </dependency>
        <dependency>
            <groupId>com.wt2024.points</groupId>
            <artifactId>system-repository</artifactId>
            <version>${points.version}</version>
        </dependency>

        <dependency>
            <groupId>com.wt2024.points</groupId>
            <artifactId>cache-repository</artifactId>
            <version>${points.version}</version>
        </dependency>

        <dependency>
            <groupId>com.wt2024.points</groupId>
            <artifactId>merchant-repository</artifactId>
            <version>${points.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <profileActive>docker</profileActive>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <exclude>application-druid.yml</exclude>
                            <exclude>application.yml</exclude>
                        </excludes>
                        <filtering>true</filtering>
                    </resource>
                    <resource>
                        <directory>src/main/resources/docker</directory>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.1.RELEASE</version>
                <configuration>
                    <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-antrun-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>prepare-package</id>-->
<!--                        <phase>prepare-package</phase>-->
<!--                        <configuration>-->
<!--                            <target>-->
<!--                                <mkdir dir="./target/classes/static"></mkdir>-->
<!--                                <copy todir="./target/classes/static" overwrite="true">-->
<!--                                    <fileset dir="../../frontend-manager/dist"><include name="**/*" /></fileset>-->
<!--                                </copy>-->
<!--                            </target>-->
<!--                        </configuration>-->
<!--                        <goals>-->
<!--                            <goal>run</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>   
                <groupId>org.apache.maven.plugins</groupId>   
                <artifactId>maven-war-plugin</artifactId>   
                <version>3.1.0</version>   
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>${project.artifactId}</warName>
                </configuration>   
           </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <configuration>
                    <repository>${project.groupId}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                    <buildArgs>
                        <filename>${project.build.finalName}.jar</filename>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>
    </build>

</project>